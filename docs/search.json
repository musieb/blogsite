[
  {
    "objectID": "machine_learning.html",
    "href": "machine_learning.html",
    "title": "Machine Learning Posts",
    "section": "",
    "text": "Simple Linear Regression Model\n\n\n\n\n\n\nregression\n\n\n\n\n\n\n\n\n\nOct 29, 2024\n\n\nMusie Beyene PhD.\n\n\n\n\n\n\n\n\n\n\n\n\nBinary Classification\n\n\n\n\n\n\nclassification\n\n\n\n\n\n\n\n\n\nOct 26, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "statistics.html",
    "href": "statistics.html",
    "title": "Statistical Posts",
    "section": "",
    "text": "Sample-Statistics Analysis\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 29, 2024\n\n\nMusie Beyene PhD.\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 26, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data_analytical_posts/welcome/index.html",
    "href": "data_analytical_posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "machine_learning_posts/welcome/index.html",
    "href": "machine_learning_posts/welcome/index.html",
    "title": "Binary Classification",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Data Analytical Posts",
    "section": "",
    "text": "Penguins Dataset\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nMusie Beyene PhD.\n\n\n\n\n\n\n\n\n\n\n\n\nTips Dataset\n\n\n\n\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nNov 14, 2024\n\n\nMusie Beyene\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 26, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "statistical_posts/welcome/index.html",
    "href": "statistical_posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "statistical_posts/post-with-code/index.html",
    "href": "statistical_posts/post-with-code/index.html",
    "title": "Sample-Statistics Analysis",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "machine_learning_posts/post-with-code/index.html",
    "href": "machine_learning_posts/post-with-code/index.html",
    "title": "Simple Linear Regression Model",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html",
    "href": "data_analytical_posts/tips_data/index.html",
    "title": "Tips Dataset",
    "section": "",
    "text": "In this blogpost we will demonstrate some common exploratory data analysis (EDA) techniques using the tips dataset. This dataset is a record of real visits to a restaurant collected by a waiter. It is a small set of structured data with a good mix of categorical and numerical features. This affords us the opportunity to apply a surprisingly wide range of EDA techniques in a contextualised analysis, demostrating the utility of these techniques and the associated python packages.\nThe objective is to demonstrate analysis techniques, including visualisation, for\n\nunivariate\n\ncategorical\nnumerical\n\nbivariate\n\ncategorical\nnumerical and\nmixed\n\n\nvariables. We will use\n\npandas for data wrangling,\nseaborn and matplotlibfor visualisation and\nstatsmodels for statistical analysis."
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-gender",
    "href": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-gender",
    "title": "Tips Dataset",
    "section": "Distribution of spending by gender",
    "text": "Distribution of spending by gender\n\nplt.title(\"Distribution of Spending by Gender\")\nsns.histplot(x=\"total_bill\", hue=\"sex\", data=df_tips, fill=True);"
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-smoking-status",
    "href": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-smoking-status",
    "title": "Tips Dataset",
    "section": "Distribution of spending by smoking status",
    "text": "Distribution of spending by smoking status\n\nplt.title(\"Distribution of Spending by Smoking Status\")\nsns.kdeplot(x=\"total_bill\", hue=\"smoker\", data=df_tips, fill=True);"
  },
  {
    "objectID": "data_analytical_posts/penguins_dataset/index.html",
    "href": "data_analytical_posts/penguins_dataset/index.html",
    "title": "Penguins Dataset",
    "section": "",
    "text": "Penguins Dataset\nLet us import some libraries and load the penguins dataset.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf_penguins = sns.load_dataset(\"penguins\")\ndf_penguins.head()\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMale\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nFemale\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nFemale\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nFemale\n\n\n\n\n\n\n\nLet us look at the distribution of the body mass of the penguins by species.\n\nplt.title(\"Distribution of Body Mass of Penguins\")\nsns.kdeplot(x=\"body_mass_g\", hue=\"species\", data=df_penguins, fill=True);\n\n\n\n\n\n\n\n\nNotice the distribution of the Gentoo penguins. It looks bimodal. One possible reason is a difference between male and females of that species. Let us look at the distribution of the body mass of that species by species and sex.\n\ndf_gentoo = df_penguins[df_penguins[\"species\"] == \"Gentoo\"]\n\nplt.title(\"Distribution of Body Mass of Gentoo Penguins\")\nsns.kdeplot(x=\"body_mass_g\", hue=\"sex\", data=df_gentoo, fill=True);\n\n\n\n\n\n\n\n\nIndeed, the separation is by sex. How about the other species?\n\ndf_chinstrap = df_penguins[df_penguins[\"species\"] == \"Chinstrap\"]\n\nplt.title(\"Distribution of Body Mass of Chinstrap Penguins\")\nsns.kdeplot(x=\"body_mass_g\", hue=\"sex\", data=df_chinstrap, fill=True);\n\n\n\n\n\n\n\n\nThe Chinstrap penguins also seem bimodal. Now let us try the Adelie penguins.\n\ndf_adelie = df_penguins[df_penguins[\"species\"] == \"Adelie\"]\n\nplt.title(\"Distribution of Body Mass of Adelie Penguins\")\nsns.kdeplot(x=\"body_mass_g\", hue=\"sex\", data=df_adelie, fill=True);"
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-day",
    "href": "data_analytical_posts/tips_data/index.html#distribution-of-spending-by-day",
    "title": "Tips Dataset",
    "section": "Distribution of spending by day",
    "text": "Distribution of spending by day\n\nplt.title(\"Distribution of Spending by Day\")\nsns.histplot(x=\"total_bill\", hue=\"day\", data=df_tips, fill=True);\n\n\n\n\n\n\n\n\nWe can also include boxplots.\n\nplt.title(\"Distribution of Spending by Day\")\nsns.boxplot(x=\"day\", y=\"total_bill\", data=df_tips);"
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#introduction",
    "href": "data_analytical_posts/tips_data/index.html#introduction",
    "title": "Tips Dataset",
    "section": "Introduction",
    "text": "Introduction\nHave you ever wondered if your tipping habits are typical? If tipping depends on the day of the week or, how exactly the total bill affects tipping? Well, we can explore some of these and other questions for a widely used dataset of real restaurant visits collected by a waiter.\nThe tips dataset, as it is known, has 244 records each with 7 features. The features are\n\n\n\nTable 1: Tips dataset features\n\n\n\n\n\n\n\n\n\n\n\nFeature\nDescription\nData Type\nRange/Levels\n\n\n\n\ntotal_bill\nThe total amount of the bill in dollars\nnumeric\n[3.07, 50.81] USD\n\n\ntip\nThe tip amount in dollars\nnumeric\n[1.00, 10.00] USD\n\n\nsex\nThe gender of the person who paid the bill\ncategorical\nMale, Female\n\n\nsmoker\nIndicates whether there were smokers in the party\ncategorical\nYes, No\n\n\nday\nThe day of the week the meal was consumed\ncategorical\nThur, Fri, Sat, Sun\n\n\ntime\nThe time of day the meal was consumed\ncategorical\nLunch, Dinner\n\n\nsize\nThe size(in numer of persons) of the party\nnumeric\n[1, 6] Persons\n\n\n\n\n\n\n\nConsiderations : Context for the Data\nWhen performing analysis it is important to have some context for the data. It is good practice to consider the following questions\n\nhow\nwhy\nwhere and\nwhen\n\nthe data was collected. This will determine what you can expect from your analysis and how you can present your findings.\nFor example, the tips data can potentially allow us to determine the takings of the restaurant for the period represented (assuming we have that information). However, this assumes the waiter recorded all takings of this period. It might be that the waiter, motivated by his own tip takings, only recorded visits that he/she served. Perhaps the waiter only works part time or maybe, given the sheer volume of visits, the waiter might have chosen a random set of visits to record.\nNow, suppose that the waiter recorded all transactions correctly and that we are able to calculate the takings (or any other statistic) correctly. Can we take the statistics to be representative or typical of visits currently. Was the data collected before the volume and composition of visits changed dramatically following the construction of a football stadium nearby. Perhaps the data was collected during a festival, a particularly busy period for the restaurant. All these questions are important.\nFor our purposes we will assume the data to be representative in every sense and proceed to ask questions,and demonstrate analytical techniques, unrestricted."
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#goals",
    "href": "data_analytical_posts/tips_data/index.html#goals",
    "title": "Tips Dataset",
    "section": "",
    "text": "In this blogpost we will demonstrate some common exploratory data analysis (EDA) techniques using the tips dataset. This dataset is a record of real visits to a restaurant collected by a waiter. It is a small set of structured data with a good mix of categorical and numerical features. This affords us the opportunity to apply a surprisingly wide range of EDA techniques in a contextualised analysis, demostrating the utility of these techniques and the associated python packages.\nThe objective is to demonstrate analysis techniques, including visualisation, for\n\nunivariate\n\ncategorical\nnumerical\n\nbivariate\n\ncategorical\nnumerical and\nmixed\n\n\nvariables. We will use\n\npandas for data wrangling,\nseaborn and matplotlibfor visualisation and\nstatsmodels for statistical analysis."
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#section",
    "href": "data_analytical_posts/tips_data/index.html#section",
    "title": "Tips Dataset",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf_tips = sns.load_dataset(\"tips\")\ndf_tips.head()\n\n\n\n\n\n\n\n\ntotal_bill\ntip\nsex\nsmoker\nday\ntime\nsize\n\n\n\n\n0\n16.99\n1.01\nFemale\nNo\nSun\nDinner\n2\n\n\n1\n10.34\n1.66\nMale\nNo\nSun\nDinner\n3\n\n\n2\n21.01\n3.50\nMale\nNo\nSun\nDinner\n3\n\n\n3\n23.68\n3.31\nMale\nNo\nSun\nDinner\n2\n\n\n4\n24.59\n3.61\nFemale\nNo\nSun\nDinner\n4\n\n\n\n\n\n\n\nLet us plot visit counts by days of the week.\n\nplt.style.use(\"bmh\")\n\nplt.title(\"Visit Counts by Day of the Week\")\nsns.countplot(x=\"day\", data=df_tips)\n\n\n\n\n\n\n\n\nWe can also examine the distribution of visit counts by day of the week and sex.\n\nplt.title(\"Visit Counts by Day of the Week\")\nsns.countplot(x=\"day\", hue=\"sex\", data=df_tips);"
  },
  {
    "objectID": "data_analytical_posts/tips_data/index.html#the-data",
    "href": "data_analytical_posts/tips_data/index.html#the-data",
    "title": "Tips Dataset",
    "section": "The Data",
    "text": "The Data\n\nLoading and inspecting the dataset\nAs mensioned earlier, the dataset is available as a pandas dataframe from the seaborn library. So, let us load pandas and seaborn. We will also use seaborn as our primary visualization tool however, we will also use matplotlib. Additionally, we will use statsmodels for statistical analysis, in particular for testing statistical hypothesis.\nSo, let us import these libraries, load our data and inspect the first few records.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\n\ndf_tips = sns.load_dataset(\"tips\")\ndf_tips.head()\n\n\n\n\n\n\n\n\ntotal_bill\ntip\nsex\nsmoker\nday\ntime\nsize\n\n\n\n\n0\n16.99\n1.01\nFemale\nNo\nSun\nDinner\n2\n\n\n1\n10.34\n1.66\nMale\nNo\nSun\nDinner\n3\n\n\n2\n21.01\n3.50\nMale\nNo\nSun\nDinner\n3\n\n\n3\n23.68\n3.31\nMale\nNo\nSun\nDinner\n2\n\n\n4\n24.59\n3.61\nFemale\nNo\nSun\nDinner\n4\n\n\n\n\n\n\n\nLet us examine what categories pandas has assigned to each variable.\n\ndf_tips.dtypes\n\ntotal_bill     float64\ntip            float64\nsex           category\nsmoker        category\nday           category\ntime          category\nsize             int64\ndtype: object\n\n\nIt is common for datasets to have missing data. The info() method of a DataFrame can be used to examine the number of missing values in each column.\n\ndf_tips.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 244 entries, 0 to 243\nData columns (total 7 columns):\n #   Column      Non-Null Count  Dtype   \n---  ------      --------------  -----   \n 0   total_bill  244 non-null    float64 \n 1   tip         244 non-null    float64 \n 2   sex         244 non-null    category\n 3   smoker      244 non-null    category\n 4   day         244 non-null    category\n 5   time        244 non-null    category\n 6   size        244 non-null    int64   \ndtypes: category(4), float64(2), int64(1)\nmemory usage: 7.4 KB\n\n\nHere we see that there are a total of 244 records inxed 0 to 243. info() also gives us the data type designation of each column (variable/field). There are no missing values on this set as indicated by 244 non-null counts for all the columns. In case of missing values, the Non-Null Count column displays the number of null values. This is of course the count by column. Finally, we are told size of the DataFrame in memory is 7.4 kilobytes.\nFor numerical variables we can get the five-point summary statistics, and more, as follows\n\ndf_tips.describe()\n\n\n\n\n\n\n\n\ntotal_bill\ntip\nsize\n\n\n\n\ncount\n244.000000\n244.000000\n244.000000\n\n\nmean\n19.785943\n2.998279\n2.569672\n\n\nstd\n8.902412\n1.383638\n0.951100\n\n\nmin\n3.070000\n1.000000\n1.000000\n\n\n25%\n13.347500\n2.000000\n2.000000\n\n\n50%\n17.795000\n2.900000\n2.000000\n\n\n75%\n24.127500\n3.562500\n3.000000\n\n\nmax\n50.810000\n10.000000\n6.000000\n\n\n\n\n\n\n\nWe can see that the summary from info() and describe() are consistent and agree with table Table 1.\n\nLet us plot visit counts by days of the week.\n\nplt.style.use(\"bmh\")\n\nplt.title(\"Visit Counts by Day of the Week\")\nsns.countplot(x=\"day\", data=df_tips)\n\n\n\n\n\n\n\n\nWe can also examine the distribution of visit counts by day of the week and sex.\n\nplt.title(\"Visit Counts by Day of the Week\")\nsns.countplot(x=\"day\", hue=\"sex\", data=df_tips);"
  }
]